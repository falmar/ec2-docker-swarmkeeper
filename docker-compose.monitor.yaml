version: "3.8"

services:
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:v0.47.0"
    networks:
      - net
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/var/run/docker.sock:/var/run/docker.sock,ro"
    #      - "/dev/disk/:/dev/disk:ro"
    command:
      - '--logtostderr'
      - '--docker_only'
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 1s
  #      placement:
  #        constraints:
  #          - node.role == worker


  node_exporter:
    image: prom/node-exporter:latest
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$$$|/)'
      - '--no-collector.ipvs'
    networks:
      - net
    volumes:
      - '/:/host:ro,rslave'
      - '/proc:/host/proc:ro'
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 1s
  #      placement:
  #        constraints:
  #          - node.role == worker

  dockerd_exporter:
    image: nginx:alpine
    ports:
      - "9324:9324"
    configs:
      - source: dockerd_config2
        target: /etc/nginx/conf.d/default.conf
    networks:
      - net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    #      - host
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 1s
  #      placement:
  #        constraints:
  #          - node.role == worker

  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    networks:
      - net
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    configs:
      - source: prom_config2
        target: "/etc/prometheus/prometheus.yaml"
    volumes:
      - prometheus_data:/prometheus
    deploy:
      restart_policy:
        condition: any
        delay: 1s
  #      placement:
  #        constraints:
  #          - node.role == manager

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    networks:
      - net
    volumes:
      - grafana_data:/var/lib/grafana
    deploy:
      restart_policy:
        condition: any
        delay: 1s

volumes:
  grafana_data: { }
  prometheus_data: { }
